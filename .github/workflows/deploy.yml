name: Build, Test, and Deploy

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: eddymena19/iaapi

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Clonar el repositorio
      - uses: actions/checkout@v3

      # 2️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4️⃣ Build Docker image
      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t $IMAGE_NAME:latest .

      # 5️⃣ Create .env file
      - name: Create .env file
        run: |
          echo "POSTGRES_DB=rwdb" >> .env
          echo "POSTGRES_USER=postgres" >> .env
          echo "POSTGRES_PASSWORD=postgres" >> .env
          echo "POSTGRES_PORT=5432" >> .env
          echo "DB_HOST=db" >> .env
          echo "DB_CONNECTION=postgresql://postgres:postgres@db:5432/rwdb" >> .env
          echo "SECRET_KEY=$(openssl rand -hex 32)" >> .env
          echo "PROJECT_NAME=iAApiLocal" >> .env
          echo "DEBUG=True" >> .env
          echo "PGADMIN_DEFAULT_EMAIL=admin@example.com" >> .env
          echo "PGADMIN_DEFAULT_PASSWORD=admin" >> .env

      # 6️⃣ Start Docker Compose services
      - name: Start services with Docker Compose
        run: |
          echo "Starting services with Docker Compose..."
          docker compose down || true
          docker compose up -d

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest alembic

      # 7️⃣ Run lightweight unit tests inline
      - name: Run basic unit tests
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip pytest
          mkdir -p tests
          echo "def test_example(): assert 1 + 1 == 2" > tests/test_sample.py
          pytest tests

      # 8️⃣ Run SonarCloud analysis
      - name: Run SonarCloud analysis
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=EddyMena_iaapiTestEnv
            -Dsonar.organization=eddymena19
            -Dsonar.host.url=https://sonarcloud.io

      # 9️⃣ List running containers
      - name: List running containers
        run: |
          docker ps
